import pyxcc.gto.reference.rysq as rysq

from pytest import approx

def test_rysq_roots():

  tw5 = (
    (0.000000, 0, 0.14887433898163121088, 0.29552422471475287017),
    (0.000000, 1, 0.43339539412924719080, 0.26926671930999635509),
    (0.000000, 2, 0.67940956829902440623, 0.21908636251598204400),
    (0.000000, 3, 0.86506336668898451073, 0.14945134915058059315),
    (0.000000, 4, 0.97390652851717172008, 0.66671344308688137594E-1),
    (5.000000, 0, 0.12061647906747980274, 0.22404706753632728532),
    (5.000000, 1, 0.35999360897893769402, 0.12394612619023670786),
    (5.000000, 2, 0.59183184252440576114, 0.38986367091737718353E-1),
    (5.000000, 3, 0.80234183190165582444, 0.76362120533038545742E-2),
    (5.000000, 4, 0.95672726975246632751, 0.10965367389079759497E-2),
    (10.000000, 0, 0.10123939507550996865, 0.18293170789680342357),
    (10.000000, 1, 0.30488757387351611244, 0.80914972111193530740E-1),
    (10.000000, 2, 0.51182438091126154433, 0.15223892831480732218E-1),
    (10.000000, 3, 0.72225740267919415721, 0.11413652564906474907E-2),
    (10.000000, 4, 0.92103911289510292651, 0.35452410674406612318E-4)
  )

  for (x,a,ta,Wa) in tw5:
    Q = rysq.Roots(5,x)
    Ua = ta**2/(1-ta**2)
    assert(Q.t[a] == approx(ta, 1e-16))
    assert(Q.W[a] == approx(Wa, 1e-16))
    assert(Q.U[a] == approx(Ua, 1e-10))

def test_rysq_eri4():

  from pyxcc import gto
  from pyxcc.gto.reference import rysq

  A = gto.Shell(2, [(.1, 1)], R=[0,0,0])


  print(rysq.eri([A,A],[A,A]))

def test_rysq_eri3():

  from pyxcc import gto
  from pyxcc.gto.reference import rysq

  A = gto.Shell(2, [(.1, 1)], R=[0,0,0])

  rysq.eri([A,A],[A])
  rysq.eri([A],[A,A])

def test_rysq_eri2():

  from pyxcc import gto
  from pyxcc.gto.reference import rysq

  A = gto.Shell(2, [(.1, 1)], R=[0,0,0])

  rysq.eri([A],[A])
  #rysq.eri([A,A])
